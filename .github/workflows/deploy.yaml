name: Deploy dev network
# Builds new binary and deploy on dev network on a new version only.
# A version is denoted with a protected tag.
on:
  push:
    # Only tags which match the protected tag pattern will trigger this workflow
    tags:
      - v*.*.*

env:
  ARTIFACT_BIN: "nolus.tar.gz"
  ARTIFACT_SCRIPTS: "scripts.tar.gz"
  IMAGE_NAME: "public.ecr.aws/nolus/node"
  VERSION_TAG: ${{ github.ref_name }}
  ACCOUNTS_DIR: "accounts"
  SMART_CONTRACTS_ADMIN_ADDR: "nolus15jv5h5wjf3haljzfk5vcxx86n33rswsm7u3jgn"
  NLS_DENOM: "unls"
  STABLE_BANK_SYMBOL_DEV: "ibc/7FBDBEEEBA9C50C4BCDF7BF438EAB99E64360833D240B32655C96E319559E911"
  STABLE_TICKER_DEV: "USDC"
  AWS_REGION: "eu-west-1"

  CONTRACTS_INFO_FILE: "contracts-info.json"
  CONTRACTS_REPO: "github.com/Nolus-Protocol/nolus-money-market"
  CONTRACTS_VERSION: "v0.2.13"
  CONTRACTS_ZIP: "optimized-binaries-test-net.zip"
  CONTRACTS_DIR: "artifacts"

jobs:
  # Packs deploy scripts.
  prep-scripts:
    name: Prepare scripts
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - run: |
          tar -czvf ${{ env.ARTIFACT_SCRIPTS }} scripts/remote scripts/common

      - name: Archive artifact scripts
        uses: actions/upload-artifact@v3
        with:
          name: scripts
          path: ${{ env.ARTIFACT_SCRIPTS }}

  # Builds new version of the binary.
  build-binary:
    name: Build binary
    runs-on: ubuntu-latest
    container:
      image: "public.ecr.aws/nolus/builder:0.7"

    steps:
    - uses: actions/checkout@v3

    # This is to fix GIT not liking owner of the checkout dir
    # Happens when executing not into the default container
    - name: Set ownership
      run: |
        chown -R $(id -u):$(id -g) $PWD

    - name: Run build binary
      run: |
        make build
        echo "Ensuring binary is statically linked ..."
        file target/release/nolusd | grep "statically linked"
        
    - name: Prepare binary tar
      run: |
        tar -C target/release/ -czvf $ARTIFACT_BIN .

    - name: Archive binary
      uses: actions/upload-artifact@v3
      with:
        name: nolusd-${{ env.VERSION_TAG }}
        path: ${{ env.ARTIFACT_BIN }}

  # Using gh cli to download artifacts from 'nolus-money-market' repo.
  # https://cli.github.com/manual
  download-wasm:
    name: Download wasm contracts
    runs-on: ubuntu-latest
    
    env: 
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: List Releases
        run: | 
          gh release list --repo $CONTRACTS_REPO
      
      - name: Download wasm
        run: |
          gh release download --repo $CONTRACTS_REPO $CONTRACTS_VERSION

      - name: Unzip Contracts Artifact
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq ${{ env.CONTRACTS_ZIP }} -d ${{ env.CONTRACTS_DIR }}

      - name: Archive wasm
        uses: actions/upload-artifact@v3
        with:
          name: wasm-${{ env.CONTRACTS_VERSION }}
          path: ${{ env.CONTRACTS_DIR }}

  # Deploy a new version of the dev network.
  setup-dev-network:
    name: Setup dev network
    runs-on: ubuntu-latest
    needs: [build-binary, prep-scripts, download-wasm]
    container: amazon/aws-cli
    environment: dev chain

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install tools
        run: |
          yum install -y tar gzip unzip jq git

      - uses: actions/checkout@v3

      - name: Download scripts
        uses: actions/download-artifact@v3
        with:
          name: scripts

      - name: Download wasm
        uses: actions/download-artifact@v3
        with:
          name: wasm-${{ env.CONTRACTS_VERSION }}

      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: nolusd-${{ env.VERSION_TAG }}
          
      - name: Setup dev network
        run: |
          set -euox pipefail
          tar -xvf $ARTIFACT_BIN
          export PATH="$(pwd)":$PATH

          ./scripts/init-dev-network.sh \
            -v 3 \
            --artifact-bin "$ARTIFACT_BIN" \
            --artifact-scripts "$ARTIFACT_SCRIPTS" \
            --chain-id "nolus-dev-$GITHUB_REF_NAME" \
            --validator-accounts-dir "$ACCOUNTS_DIR" \
            --wasm-script-path "$CONTRACTS_DIR" \
            --wasm-code-path "$CONTRACTS_DIR" \
            --contracts-owner-addr "$SMART_CONTRACTS_ADMIN_ADDR" \
            --treasury-nls-u128 "1000000000000" \
            --faucet-mnemonic "${{ secrets.FAUCET_MNEMONIC_DEV }}" \
            --faucet-tokens "1000000000000$NLS_DENOM,1000000000000$STABLE_BANK_SYMBOL_DEV" \
            --lpp-native "$STABLE_TICKER_DEV" \
            --contracts-info-file "$CONTRACTS_INFO_FILE"

      - name: Archive dev net data
        uses: actions/upload-artifact@v3
        with:
          name: dev-net-data-${{ env.VERSION_TAG }}
          path: |
            ${{ env.ACCOUNTS_DIR }}
            ${{ env.CONTRACTS_INFO_FILE }}
