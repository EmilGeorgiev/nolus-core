include:
  - '.cicd/wasmvm-cache.yml'
  - '.cicd/go-cache.yml'

stages:
  - prep
  - build
  - test

variables:
  CI_OCI_REGISTRY: "public.ecr.aws/u2x2g6a1"
  NOLUS_BUILDER_IMAGE: "${CI_OCI_REGISTRY}/builder:0.2"
# https://github.com/GoogleContainerTools/kaniko/issues/1542#issuecomment-853929795
  container: "docker"


#ref: https://github.com/GoogleContainerTools/kaniko
prep-builder:
  stage: prep
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"credsStore\":\"ecr-login\"}" > /kaniko/.docker/config.json
    - /kaniko/executor
          --context "${CI_PROJECT_DIR}"
          --dockerfile "${CI_PROJECT_DIR}/build/builder_spec"
          --destination "${NOLUS_BUILDER_IMAGE}"
      # --no-push
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "false"'
      when: never
    # - when: on_success

download-wasmvm-lib:
  stage: build
  image: "${NOLUS_BUILDER_IMAGE}"
  extends: .wasmvm-cache-vars
  cache:
    key: $WASMVM_CACHE_KEY
    paths:
      - $WASMVM_REL_DIR
  variables:
    WASMVM_LIB: "libwasmvm_muslc.a"
    WASMVM_URL: "https://github.com/CosmWasm/wasmvm/releases/download/v0.16.0/$WASMVM_LIB"
    WASMVM_LOCAL_PATH: $WASMVM_DIR/$WASMVM_LIB
  before_script:
    - mkdir -p $WASMVM_DIR
  script:
   - if [ ! -f "$WASMVM_LOCAL_PATH" ]; then wget -O $WASMVM_LOCAL_PATH $WASMVM_URL; fi
  

build-job:
  stage: build
  needs: ["download-wasmvm-lib"]
  image: "${NOLUS_BUILDER_IMAGE}"
  extends:
    - .go-cache-vars
    - .wasmvm-cache-vars
  cache:
    - key: $WASMVM_CACHE_KEY
      paths:
        - $WASMVM_REL_DIR
      policy: pull
    - key: $GOMODCACHE_KEY
      paths:
        - $GOMODCACHE_REL_DIR
    - key: $GOCACHE_KEY
      paths:
        - $GOCACHE_REL_DIR
  before_script:
    - mkdir -p $WASMVM_DIR
    - mkdir -p $GOMODCACHE_DIR
    - mkdir -p $GOCACHE_DIR
  script:
    - go env -w GOCACHE=${GOCACHE_DIR}
    - go env -w GOMODCACHE=${GOMODCACHE_DIR}
    - CGO_LDFLAGS=-L${WASMVM_DIR} make build_local
  artifacts:
    paths:
      - target/release

test-job-empty:
  stage: test
  script:
    - echo "Tests none yet!"
