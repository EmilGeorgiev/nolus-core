include: '.cicd/go-cache.yml'
include: '.cicd/wasmvm-cache.yml'
stages:
  - prep
  - build
  - test

variables:
  CI_OCI_REGISTRY: "public.ecr.aws/u2x2g6a1"
  NOLUS_BUILDER_IMAGE: "${CI_OCI_REGISTRY}/builder:0.1"
  # NOLUS_BUILDER_IMAGE: "builder:latest"
# https://github.com/GoogleContainerTools/kaniko/issues/1542#issuecomment-853929795
  container: "docker"
#needs an already configured AWS user on the host system, e.g. `aws configure`
# prep-registry-cred:
#   stage: prep
#   image: amazon/aws-cli
#   variables:
#     CI_REGISTRY: "public.ecr.aws"
#     CI_REGISTRY_USER: "AWS"
#   script:
#     - CI_REGISTRY_PASSWORD=$(aws ecr-public get-login-password --region us-east-1)
#     - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
#   cache:

# prep-debug:
#   stage: prep
#   script:
#     - export

#ref: https://github.com/GoogleContainerTools/kaniko
prep-builder:
  stage: prep
  # needs: ["prep-registry-cred"]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  # extends: .wasmvm-vars
  # variables:
  #   BUILD_IMAGE_SRC_DIR: "/code"
  #   BUILD_IMAGE_GOCACHE_DIR: ""
  script:
    - "[[ ! 'docker image ls | grep "${NOLUS_BUILDER_IMAGE}"' ]]"
    - echo "{\"credsStore\":\"ecr-login\"}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/build/builder_spec"
      --destination "${NOLUS_BUILDER_IMAGE}"
      # --no-push
      # --build-arg CODE_DIR=${BUILD_IMAGE_SRC_DIR}
      # --build-arg GOCACHE_DIR=${BUILD_IMAGE_GOCACHE_DIR}
      # --build-arg GOMODCACHE_DIR=${BUILD_IMAGE_GOMODCACHE_DIR}
      # --build-arg CGO_LDFLAGS=-L${WASMVM_DIR}
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "false"'
      when: never
    - when: on_success

# prep-builder:load-local:
#   stage: prep
#   needs: ["prep-builder:image"]
#   tag: TBD-shell-executor!
#   script:
#     docker load ....

download-wasmvm-lib:
  stage: build
  image: "${NOLUS_BUILDER_IMAGE}"
  extends: .wasmvm-cache
  variables:
    WASMVM_LIB: 'libwasmvm_muslc.a'
    WASMVM_URL: 'https://github.com/CosmWasm/wasmvm/releases/download/v0.16.0/$WASMVM_LIB'
    WASMVM_LOCAL_PATH: '$WASMVM_DIR/$WASMVM_LIB'
  script:
   - '[ ! -f "$WASMVM_LOCAL_PATH" ] && wget -O $WASMVM_LOCAL_PATH $WASMVM_URL'
  

build-job:
  stage: build
  needs: ["download-wasmvm-lib"]
  image: "${NOLUS_BUILDER_IMAGE}"
  extends: .go-cache
  extends: .wasmvm-cache
  script:
    - CGO_LDFLAGS=-L${WASMVM_DIR} make build_local

test-job-empty:
  stage: test
  script:
    - echo "Tests none yet!"
