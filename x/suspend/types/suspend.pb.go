// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: nolus/suspend/v1beta1/suspend.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SuspendedState struct {
	Suspended    bool   `protobuf:"varint,2,opt,name=suspended,proto3" json:"suspended,omitempty"`
	BlockHeight  int64  `protobuf:"varint,3,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	AdminAddress string `protobuf:"bytes,4,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
}

func (m *SuspendedState) Reset()         { *m = SuspendedState{} }
func (m *SuspendedState) String() string { return proto.CompactTextString(m) }
func (*SuspendedState) ProtoMessage()    {}
func (*SuspendedState) Descriptor() ([]byte, []int) {
	return fileDescriptor_945d9845dee81bbf, []int{0}
}
func (m *SuspendedState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SuspendedState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SuspendedState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SuspendedState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuspendedState.Merge(m, src)
}
func (m *SuspendedState) XXX_Size() int {
	return m.Size()
}
func (m *SuspendedState) XXX_DiscardUnknown() {
	xxx_messageInfo_SuspendedState.DiscardUnknown(m)
}

var xxx_messageInfo_SuspendedState proto.InternalMessageInfo

func (m *SuspendedState) GetSuspended() bool {
	if m != nil {
		return m.Suspended
	}
	return false
}

func (m *SuspendedState) GetBlockHeight() int64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *SuspendedState) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*SuspendedState)(nil), "nolus.suspend.v1beta1.SuspendedState")
}

func init() {
	proto.RegisterFile("nolus/suspend/v1beta1/suspend.proto", fileDescriptor_945d9845dee81bbf)
}

var fileDescriptor_945d9845dee81bbf = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0xcf, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0xe1, 0x98, 0x22, 0x44, 0x4d, 0x61, 0x88, 0x84, 0x94, 0x01, 0x59, 0x81, 0x2e, 0x59,
	0x88, 0x55, 0xb1, 0xb0, 0xc2, 0xc4, 0x9c, 0x6e, 0x2c, 0x95, 0x13, 0x5f, 0xb5, 0x16, 0xb1, 0x6f,
	0x94, 0xeb, 0x56, 0xc0, 0x53, 0xf0, 0x58, 0x8c, 0x1d, 0x19, 0x51, 0xf2, 0x22, 0x08, 0x87, 0xd0,
	0xf1, 0x7c, 0x3a, 0xcb, 0xcf, 0xe7, 0x0e, 0xeb, 0x2d, 0x49, 0xda, 0x52, 0x03, 0x4e, 0xcb, 0xdd,
	0xa2, 0x04, 0xaf, 0x16, 0xe3, 0xce, 0x9b, 0x16, 0x3d, 0xc6, 0x97, 0xe1, 0x94, 0x8f, 0xf8, 0x77,
	0xba, 0xd9, 0xf1, 0x8b, 0xe5, 0x40, 0xa0, 0x97, 0x5e, 0x79, 0x88, 0xaf, 0xf8, 0x94, 0x46, 0x49,
	0x8e, 0x52, 0x96, 0x9d, 0x16, 0x07, 0x88, 0xaf, 0xf9, 0xac, 0xac, 0xb1, 0x7a, 0x59, 0x6d, 0xc0,
	0xac, 0x37, 0x3e, 0x99, 0xa4, 0x2c, 0x9b, 0x14, 0x67, 0xc1, 0x9e, 0x02, 0xc5, 0x73, 0x7e, 0xae,
	0xb4, 0x35, 0x6e, 0xa5, 0xb4, 0x6e, 0x81, 0x28, 0x39, 0x4e, 0x59, 0x36, 0x2d, 0x66, 0x01, 0x1f,
	0x06, 0x7b, 0x2c, 0x3e, 0x3b, 0xc1, 0xf6, 0x9d, 0x60, 0xdf, 0x9d, 0x60, 0x1f, 0xbd, 0x88, 0xf6,
	0xbd, 0x88, 0xbe, 0x7a, 0x11, 0x3d, 0xdf, 0xaf, 0x8d, 0xaf, 0x55, 0x79, 0xeb, 0xd0, 0x62, 0x5e,
	0xb5, 0xa0, 0x0d, 0x91, 0xb1, 0x98, 0x3b, 0xf0, 0xf2, 0xd7, 0x64, 0x85, 0x64, 0xdf, 0xd1, 0x81,
	0x7c, 0xfd, 0x4f, 0xf6, 0x6f, 0x0d, 0x50, 0x79, 0x12, 0x4a, 0xef, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x43, 0xcb, 0xcd, 0x0b, 0x10, 0x01, 0x00, 0x00,
}

func (m *SuspendedState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SuspendedState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SuspendedState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AdminAddress) > 0 {
		i -= len(m.AdminAddress)
		copy(dAtA[i:], m.AdminAddress)
		i = encodeVarintSuspend(dAtA, i, uint64(len(m.AdminAddress)))
		i--
		dAtA[i] = 0x22
	}
	if m.BlockHeight != 0 {
		i = encodeVarintSuspend(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x18
	}
	if m.Suspended {
		i--
		if m.Suspended {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func encodeVarintSuspend(dAtA []byte, offset int, v uint64) int {
	offset -= sovSuspend(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SuspendedState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Suspended {
		n += 2
	}
	if m.BlockHeight != 0 {
		n += 1 + sovSuspend(uint64(m.BlockHeight))
	}
	l = len(m.AdminAddress)
	if l > 0 {
		n += 1 + l + sovSuspend(uint64(l))
	}
	return n
}

func sovSuspend(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSuspend(x uint64) (n int) {
	return sovSuspend(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SuspendedState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSuspend
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SuspendedState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SuspendedState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suspended", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSuspend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Suspended = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSuspend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSuspend
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSuspend
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSuspend
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSuspend(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSuspend
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSuspend(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSuspend
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSuspend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSuspend
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSuspend
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSuspend
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSuspend
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSuspend        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSuspend          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSuspend = fmt.Errorf("proto: unexpected end of group")
)
